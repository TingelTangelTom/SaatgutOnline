EntwicklungsTagebuch f�r das JavaEE-Projekt "SaatgutOnline"



--------------------------------------
21:25h (Tom) - Änderungen im Framework
--------------------------------------

Wie ich grade feststellen musste, wurden im IndexPlatzhalterservlet (das ja irgendwie so eine Art Vorlage ist) bis eben grade
noch KopfbereichController und FussbereichController includiert - DAS IST NICHT MEHR UP2DATE!
Wir haben ja irgendwann die Controller von den Servlets getrennt - und da ist das nicht geändert worden. Aber das habe ich nun wagemutig nachgeholt! ^^

	Inkludiert bitte in euren Servlets am Anfang

		/Kopfbereich
	und am Ende
		/Fussbereich.

Dann funzt des auch wieder! =)

-----------------------------------------------------------
27.April, 17:45h - (Tom) SprachversionsFilter implementiert
-----------------------------------------------------------

Hallo meine lieben Mitstreiter,

ich dachte mir, es w�re vielleicht eine ganz gute Idee, ein Dokument anzulegen, in dem man mal eben ein paar RundInfos f�rs Team raushauen k�nnte.
Gedacht - tun getan! ^^

Ps. ich pack das hier auch mal ins Projekt - dann sieht man immer gleich beim pullen, wenn sich hier was ge�ndert hat,
und man kann beim commit das Thema dazu schreiben. =)

-------

Zum Thema:

Der SprachversionsFilter spring an, sobald irgendein Servlet angesteuert wird (urlPatterns = { "/*" }).
Er guckt zun�chst, ob es eine Session gibt, erzeugt im Zweifeldfall eine neue Session, und speichert dann
unter dem Attribut "sprache" ein Locale-Objekt.



WAS F�R EUCH WICHTIG IST:

Ihr m�sst in den Ordnern I18N.de und I18N.en .properties-Dateien anlegen, die hei�en wie die Klasse, aus der ihr sp�ter darauf zugreifen wollt.
Schaut einfach mal rein, Simon und ich haben schon damit gearbeitet - das sollte ein gutes Beispiel sein.

Dann wollt ihr nat�rlich auch auf diese Textbausteine zugreifen:

Ihr m�sst dort, wo ihr mit der Internationalisierung arbeiten wollt, zun�chst einmal die Session verf�gbar haben.
Auf die Session greift ihr so zu:

	HttpSession session = request.getSession();

Das setzt nat�rlich vorraus, dass dort auch die >HttpRequest request;< verf�gbar ist - also entsprechend aus dem Servlet mitschicken!
Dann holt ihr euch das Locale-Objekt wie folgt aus der Session:

		Locale locale = (Locale)session.getAttribute("sprache");		

Um nun auf die Texte aus den I18N-properties-Datein zugreifen zu k�nnen, m�sst ihr ein ResourceBundle-Objekt erzeugen

	ResourceBunde textbundle = PropertyResourceBundle.getBundle("I18N." + locale.getLanguage() + "." + getClass().getSimpleName(), locale); <--- Meine Idee :-)
		
und dar�ber auf die Textbl�cke zugreifen, indem ihr entweder direkt an die Stelle, wo der internationalisierte Text
auftauchen soll das textbundle einbaut:

	textbundle.getString("BEISPIELTEXT")

oder es noch in einem String zwischenspeichert, den ihr dann sp�ter an Ort und Stelle unter bringt:

	final String beispieltext = textbundle.getString("BEISPIELTEXT");

Das bietet sich an, wenn man den Text �fter braucht.


ich pers�nlich habe es so gemacht, dass beim Erzeugen des Objektes der Klasse, in der ich die internationalisierten Textbl�cke verwenden wollte
(bei mir ist das KopfbereichView - im Zweifelsfalle einfach mal reingucken...^^) den request mitgeschickt habe, dann die Klassenvariable 

	private ResourceBundle textbundle;

erzeugt, und im Konstruktor folgendes aufgerufen habe:

	HttpSession session = request.getSession();
	Locale locale = (Locale)session.getAttribute("sprache");		
	this.textbundle = PropertyResourceBundle.getBundle("I18N." + locale.getLanguage() + "." + getClass().getSimpleName(), locale);

-------

@Anja:

Ich denke mal, dass du im Servlet-Package die Datei AGB angelegt hast.
Du leitest von dort aus auf das (nicht vorhandene) Servlet /AGBController weiter - das funktioniert so nicht!
Statt dessen musst du ein AGBController-Objekt erzeugen (und am besten gleich den request mitschicken, um auf die Session zugreifen zu k�nnen):

	AGBController agbController = new AGBController(request);

Die Action passiert dann im Konstruktor, wo du ja schon die Datenbank-Verbindung herstellst. =)

-------

Hoffe, ihr habt brav alle alles durchgelesen, hehe, und einen sch�nen, bunten Tag! =D



	
- - - - - - - - - - - - - - - - - - - - - - - - - -
ACHTUNG: DIESER BLOCK SOLL immer GANZ UNTEN STEHEN!
- - - - - - - - - - - - - - - - - - - - - - - - - -

Bitte offene Fragen hier posten:

Bitte in den Filter noch die sprache_id einbauen

Stehen aktuelle Anregungen nicht immer oben?





